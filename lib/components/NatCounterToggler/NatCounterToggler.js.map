{"version":3,"sources":["NatCounterToggler.js"],"names":["NatCounterToggler","onIncrease","onDecrease","counter","color","width","height","min","max","decreaseDisabled","setDecreaseDisabled","increaseDisabled","setIncreaseDisabled","colors","bw","grayLight","decreaseColor","setDecreaseColor","primary","white","increaseColor","setIncreaseColor","actionHandler","action","Platform","OS","propTypes","PropTypes","string","isRequired","number","func","defaultProps"],"mappings":"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","file":"NatCounterToggler.js","sourcesContent":["import React, { useState } from 'react';\nimport { Platform, TouchableNativeFeedback } from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport { colors } from '../../assets/theme/colors/colors';\nimport {\n  CounterView,\n  ContentViewDefault,\n  ContentViewLeft,\n  ContentViewRight,\n  CustomTouchableHighlight,\n  CustomTextOperators,\n} from './NatCounterToggler.styles';\n\nexport const NatCounterToggler = ({\n  onIncrease, onDecrease, counter, color, width, height, min, max,\n}) => {\n  const [decreaseDisabled, setDecreaseDisabled] = useState(true);\n  const [increaseDisabled, setIncreaseDisabled] = useState(false);\n  const [decreaseColor, setDecreaseColor] = useState(colors.bw.grayLight);\n  const [increaseColor, setIncreaseColor] = useState(colors.primary.white);\n\n  const actionHandler = (action) => {\n    if (action === 'increase') {\n      onIncrease();\n      if (counter === min) {\n        setDecreaseColor(colors.primary.white);\n        setDecreaseDisabled(false);\n      }\n      if ((counter + 1) === max) {\n        setIncreaseColor(colors.bw.grayLight);\n        setIncreaseDisabled(true);\n      }\n    } else {\n      onDecrease();\n      if (counter === max) {\n        setIncreaseColor(colors.primary.white);\n        setIncreaseDisabled(false);\n      }\n      if ((counter - 1) === min) {\n        setDecreaseColor(colors.bw.grayLight);\n        setDecreaseDisabled(true);\n      }\n    }\n  };\n\n  return Platform.OS === 'android' ? (\n    <CounterView color={color} width={width} height={height}>\n      <TouchableNativeFeedback disabled={decreaseDisabled} onPress={() => actionHandler('decrease')}>\n        <ContentViewLeft color={decreaseColor}>\n          <CustomTextOperators>-</CustomTextOperators>\n        </ContentViewLeft>\n      </TouchableNativeFeedback>\n\n      <ContentViewDefault>\n        <CustomTextOperators>{counter}</CustomTextOperators>\n      </ContentViewDefault>\n\n      <TouchableNativeFeedback disabled={increaseDisabled} onPress={() => actionHandler('increase')}>\n        <ContentViewRight color={increaseColor}>\n          <CustomTextOperators>+</CustomTextOperators>\n        </ContentViewRight>\n      </TouchableNativeFeedback>\n    </CounterView>\n  ) : (\n    <CounterView color={color}>\n      <CustomTouchableHighlight disabled={decreaseDisabled} onPress={() => actionHandler('decrease')}>\n        <ContentViewLeft color={decreaseColor}>\n          <CustomTextOperators>-</CustomTextOperators>\n        </ContentViewLeft>\n      </CustomTouchableHighlight>\n\n      <ContentViewDefault>\n        <CustomTextOperators>{counter}</CustomTextOperators>\n      </ContentViewDefault>\n\n      <CustomTouchableHighlight disabled={increaseDisabled} onPress={() => actionHandler('increase')}>\n        <ContentViewRight color={increaseColor}>\n          <CustomTextOperators>+</CustomTextOperators>\n        </ContentViewRight>\n      </CustomTouchableHighlight>\n    </CounterView>\n  );\n};\n\nNatCounterToggler.propTypes = {\n  color: PropTypes.string.isRequired,\n  counter: PropTypes.number.isRequired,\n  height: PropTypes.string,\n  max: PropTypes.number.isRequired,\n  min: PropTypes.number.isRequired,\n  onDecrease: PropTypes.func.isRequired,\n  onIncrease: PropTypes.func.isRequired,\n  width: PropTypes.string,\n};\nNatCounterToggler.defaultProps = {\n  height: null,\n  width: null,\n};\n"]}