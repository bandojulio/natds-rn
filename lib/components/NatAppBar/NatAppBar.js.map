{"version":3,"sources":["NatAppBar.js"],"names":["styles","elevation","shadowColor","shadowOffset","height","width","shadowOpacity","NatAppBar","alignTitle","title","node","iconLeft","iconRight","onPressRight","onPressLeft","showIconLeft","showIconRight","Error","renderIcon","iconData","iconPress","position","iconAttributes","color","ThemeNaturaLight","palette","text","primary","size","styleCustom","right","renderNode","bottom","justifyContent","left","paddingLeft","paddingRight","top","alignItems","propTypes","PropTypes","string","shape","func","bool","defaultProps"],"mappings":"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","file":"NatAppBar.js","sourcesContent":["import React from 'react';\nimport {\n  View,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport { loadIcon } from '../../utils';\nimport {\n  ThemeNaturaLight,\n} from '../../themes/ThemeNaturaLight';\n\nimport {\n  HeaderWrapper,\n  HeaderTitle,\n  IconPress,\n} from './NatAppBar.styles';\n\nconst styles = {\n  elevation: 1,\n  shadowColor: '#000',\n  shadowOffset: {\n    height: 2,\n    width: 0,\n  },\n  shadowOpacity: 0.24,\n};\n\nexport const NatAppBar = ({\n  alignTitle,\n  title,\n  node,\n  iconLeft,\n  iconRight,\n  onPressRight,\n  onPressLeft,\n  showIconLeft,\n  showIconRight,\n}) => {\n  if (!title) {\n    throw new Error('Title should not empty string');\n  }\n\n  const renderIcon = (iconData, iconPress, position) => {\n    const iconAttributes = {\n      color: ThemeNaturaLight.palette.text.primary,\n      size: 24,\n    };\n\n    let styleCustom = {};\n\n    if (position === 'right') {\n      styleCustom = { position: 'absolute', right: 0 };\n    }\n\n    return (\n      <View style={styleCustom}>\n        <IconPress onPress={iconPress} position={position}>\n          { loadIcon(iconData, iconAttributes) }\n        </IconPress>\n      </View>\n    );\n  };\n\n  const renderNode = () => (\n    <View style={{\n      bottom: 0,\n      justifyContent: alignTitle,\n      left: 0,\n      paddingLeft: 16,\n      paddingRight: 16,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n    }}\n    >\n      { node }\n    </View>\n  );\n\n  return (\n    <HeaderWrapper\n      accessible\n      accessibilityRole=\"header\"\n      style={styles}\n    >\n      { showIconLeft && renderIcon(iconLeft, onPressLeft, 'left') }\n      <View style={{\n        alignItems: alignTitle,\n        bottom: 0,\n        justifyContent: alignTitle,\n        left: showIconLeft ? 40 : 0,\n        position: 'absolute',\n        right: showIconRight ? 40 : 0,\n        top: 0,\n      }}\n      >\n        { node && renderNode() }\n        { !node && (\n          <HeaderTitle\n            accessibilityLabel={`${title}`}\n          >\n            {title}\n          </HeaderTitle>\n        )}\n      </View>\n      { showIconRight && renderIcon(iconRight, onPressRight, 'right') }\n    </HeaderWrapper>\n  );\n};\n\nNatAppBar.propTypes = {\n  alignTitle: PropTypes.string,\n  iconLeft: PropTypes.shape(),\n  iconRight: PropTypes.shape(),\n  node: PropTypes.node,\n  onPressLeft: PropTypes.func,\n  onPressRight: PropTypes.func,\n  showIconLeft: PropTypes.bool,\n  showIconRight: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nNatAppBar.defaultProps = {\n  alignTitle: 'flex-start',\n  iconLeft: null,\n  iconRight: null,\n  node: null,\n  onPressLeft: () => {},\n  onPressRight: () => {},\n  showIconLeft: true,\n  showIconRight: true,\n  title: null,\n};\n"]}