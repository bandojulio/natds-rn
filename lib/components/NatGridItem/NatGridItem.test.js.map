{"version":3,"sources":["NatGridItem.test.js"],"names":["describe","it","griditem","renderer","create","jest","fn","toJSON","expect","toMatchSnapshot","press","beforeEach","props","children","onPress","sizeMedium","source","thumb","toHaveStyleRule","item","description","title"],"mappings":"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","file":"NatGridItem.test.js","sourcesContent":["import React from 'react';\nimport renderer from 'react-test-renderer';\n\nimport { NatGridItem } from './NatGridItem';\nimport {\n  Thumb, Item, Description, Title,\n} from './NatGridItem.styles';\nimport 'jest-styled-components/native';\n\ndescribe('NatGridItem and local styled components', () => {\n  describe('NatGridItem component', () => {\n    it('Should render NatGridItem component ', () => {\n      const griditem = renderer.create(\n        <NatGridItem sizeMedium onPress={jest.fn()} source=\"#\">\n          Texto\n        </NatGridItem>,\n      ).toJSON();\n\n      expect(griditem).toMatchSnapshot();\n    });\n\n    describe('Properties of NatGridItem', () => {\n      let press = () => {};\n\n      beforeEach(() => {\n        press = jest.fn();\n      });\n\n      const props = {\n        children: 'descrição',\n        onPress: press,\n        sizeMedium: true,\n        source: '#',\n      };\n\n      it('Should render NatGridItem component ', () => {\n        const griditem = renderer.create(<NatGridItem {...props} />).toJSON();\n\n        expect(griditem).toMatchSnapshot();\n      });\n    });\n  });\n\n  describe('Style Thumb', () => {\n    it('Thumb default', () => {\n      const thumb = renderer.create(<Thumb />).toJSON();\n\n      expect(thumb).toHaveStyleRule('width', 128);\n      expect(thumb).toHaveStyleRule('height', 128);\n      expect(thumb).toHaveStyleRule('border-radius', 6);\n      expect(thumb).toHaveStyleRule('margin-bottom', 8);\n    });\n\n    it('Style Thumb with sizeMedium props', () => {\n      const thumb = renderer.create(<Thumb sizeMedium />).toJSON();\n\n      expect(thumb).toHaveStyleRule('width', 156);\n      expect(thumb).toHaveStyleRule('height', 156);\n    });\n  });\n\n  describe('Style Item', () => {\n    it('Item default', () => {\n      const item = renderer.create(<Item />).toJSON();\n\n      expect(item).toHaveStyleRule('margin-right', 16);\n      expect(item).toHaveStyleRule('width', 128);\n      expect(item).toHaveStyleRule('height', 176);\n    });\n\n    it('Item with sizeMedium props', () => {\n      const item = renderer.create(<Item sizeMedium />).toJSON();\n\n      expect(item).toHaveStyleRule('width', 156);\n      expect(item).toHaveStyleRule('height', 200);\n    });\n  });\n\n  describe('Style Description', () => {\n    it('Description default', () => {\n      const description = renderer.create(<Description />).toJSON();\n\n      expect(description).toHaveStyleRule('width', 128);\n    });\n\n    it('description with sizeMedium props', () => {\n      const description = renderer.create(<Description sizeMedium />).toJSON();\n\n      expect(description).toHaveStyleRule('width', 156);\n    });\n  });\n\n  describe('Style Title', () => {\n    it('Title default', () => {\n      const title = renderer.create(<Title />).toJSON();\n\n      expect(title).toHaveStyleRule('flex');\n      expect(title).toHaveStyleRule('font-size', 14);\n      expect(title).toHaveStyleRule('font-weight', '500');\n      expect(title).toHaveStyleRule('font-style', 'normal');\n      expect(title).toHaveStyleRule('font-align');\n      expect(title).toHaveStyleRule('color', '#777777');\n      expect(title).toHaveStyleRule('robotoRegular');\n    });\n  });\n});\n"]}