{"version":3,"sources":["NatSelectInput.styles.js"],"names":["getInputStyles","type","state","theme","configStyle","color","palette","error","main","borderColor","border","text","disabled","secondary","primary","background","defaultContrastText","Wrapper","styled","View","defaultMargin","InputWrapper","defaultSize","backgroundColor","TextInput","numberOfLines","fontColor","secureTextEntry","Label","spacing","spacingNone","AssistiveText","InputIcon","Image","IconPress","TouchableOpacity","propTypes","PropTypes","string","isRequired","shape"],"mappings":"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","file":"NatSelectInput.styles.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components/native';\nimport { NatText } from '../NatText';\n\nconst getInputStyles = (type, state, theme) => {\n  const configStyle = {};\n\n  switch (type) {\n    case 'error':\n      configStyle.color = theme.palette.error.main;\n      configStyle.borderColor = theme.palette.error.main;\n      configStyle.border = '2px';\n      break;\n    case 'disabled':\n      configStyle.color = theme.palette.text.disabled;\n      configStyle.borderColor = theme.palette.text.disabled;\n      // configStyle.backgroundColor = theme.palette.text.disabled;\n      break;\n    case 'none':\n      configStyle.color = theme.palette.text.disabled;\n      configStyle.borderColor = theme.palette.text.disabled;\n      configStyle.border = '0px';\n      // configStyle.backgroundColor = theme.palette.text.disabled;\n      break;\n    default:\n      configStyle.color = theme.palette.text.secondary;\n      configStyle.borderColor = theme.palette.text.disabled;\n\n      if (state === 'active') {\n        configStyle.border = '2px';\n        configStyle.borderColor = theme.palette.primary.main;\n      }\n      if (state === 'filled') {\n        // configStyle.border = '2px';\n        configStyle.borderColor = theme.palette.background.defaultContrastText;\n      }\n\n      break;\n  }\n\n  return configStyle;\n};\n\nexport const Wrapper = styled.View`\n  width: 100%;\n  margin-bottom: ${({ defaultMargin }) => defaultMargin || '0px'};\n`;\n\nexport const InputWrapper = styled.View`\n  border: ${({ type, state, theme }) => getInputStyles(type, state, theme).border || '1px'};\n  border-color: ${({ type, state, theme }) => getInputStyles(type, state, theme).borderColor};\n  border-radius: 4px;\n  height: ${({ defaultSize }) => defaultSize || '56px'};\n  padding-left: 16px;\n  padding-bottom: 0px;\n  flex-direction: row;\n  justify-content: space-between;\n  background-color: ${({ type, state, theme }) => getInputStyles(type, state, theme).backgroundColor || 'transparent'};\n`;\n\nexport const TextInput = styled.TextInput`\n  font-size: 16px;\n  flex: 7;\n  align-self: center;\n  padding-top: ${({ numberOfLines }) => ((numberOfLines > 1) ? '16px' : '0px')};\n  padding-bottom: ${({ numberOfLines }) => ((numberOfLines > 1) ? '16px' : '0px')};\n  text-align-vertical: top;\n  height: ${({ defaultSize }) => defaultSize || '56px'};\n  color: ${({ type, state, theme }) => getInputStyles(type, state, theme).fontColor || theme.palette.text.secondary};\n  letter-spacing: ${({ secureTextEntry }) => (secureTextEntry ? '0px' : '0px')};\n`;\n\nexport const Label = ({\n  type,\n  state,\n  theme,\n  text,\n}) => {\n  const { color } = getInputStyles(type, state, theme);\n\n  return <NatText value={text} type=\"body2\" color={color} margin={theme.spacing.spacingNone} />;\n};\n\nexport const AssistiveText = ({\n  type,\n  state,\n  theme,\n  text,\n}) => {\n  const { color } = getInputStyles(type, state, theme);\n\n  return <NatText value={text} type=\"caption\" color={color} margin={theme.spacing.spacingNone} />;\n};\n\nexport const InputIcon = styled.Image`\n  height: 24;\n  width: 24;\n  tint-color: ${({ type, state, theme }) => getInputStyles(type, state, theme).color};\n`;\n\nexport const IconPress = styled.TouchableOpacity`\n  align-self: center;\n  flex: 1;\n`;\n\nAssistiveText.propTypes = {\n  state: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  theme: PropTypes.shape.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nLabel.propTypes = {\n  state: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  theme: PropTypes.shape.isRequired,\n  type: PropTypes.string.isRequired,\n};\n"]}