{"version":3,"sources":["NatSelectInput.js"],"names":["NatSelectInput","accessibilityHint","accessibilityLabel","assistiveText","icon","label","margin","multiSelect","onChange","options","placeholder","searchText","selectButtonText","size","theme","type","value","valueLocal","setValueLocal","modalVisible","setModalVisible","defaultMargin","propMargin","onChangeValues","text","onPressInputField","onPressSelectButton","values","showSelectedOptions","filter","includes","item","id","map","title","join","propTypes","PropTypes","string","shape","content","any","svg","name","number","isRequired","bool","func","arrayOf","defaultProps","iconPress","numberOfLines","ThemeNaturaLight"],"mappings":"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","file":"NatSelectInput.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  TouchableOpacity,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport {\n  Wrapper,\n} from './NatSelectInput.styles';\nimport { NatModalSelect } from '../NatModalSelect';\nimport { NatTextInput } from '../NatTextInput';\nimport { ThemeNaturaLight } from '../../themes/ThemeNaturaLight';\n\n\nexport const NatSelectInput = ({\n  accessibilityHint,\n  accessibilityLabel,\n  assistiveText,\n  icon,\n  label,\n  margin,\n  multiSelect,\n  onChange,\n  options,\n  placeholder,\n  searchText,\n  selectButtonText,\n  size,\n  theme,\n  type,\n  value,\n}) => {\n  const [valueLocal, setValueLocal] = useState(value);\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const defaultMargin = (propMargin) => {\n    switch (propMargin) {\n      case 'none': return '0px';\n      case 'dense': return '8px';\n      case 'normal': return '16px';\n      default: return '0px';\n    }\n  };\n\n  const onChangeValues = (text) => {\n    onChange(text);\n  };\n\n  const onPressInputField = () => {\n    if (type !== 'disabled') setModalVisible(true);\n  };\n\n  const onPressSelectButton = (values) => {\n    setModalVisible(false);\n    setValueLocal(values);\n    onChange(values);\n  };\n\n  const showSelectedOptions = () => options\n    .filter(item => valueLocal.includes(item.id))\n    .map(item => item.title)\n    .join(',');\n\n  return (\n    <Wrapper\n      defaultMargin={defaultMargin(margin)}\n      accessible\n      accessibilityLabel={accessibilityLabel}\n      accessibilityHint={accessibilityHint}\n      theme={theme}\n    >\n      <NatModalSelect\n        visible={modalVisible}\n        onClose={onPressSelectButton}\n        buttonText={selectButtonText}\n        value={valueLocal}\n        placeholderText={searchText}\n        options={options}\n        multiSelect={multiSelect}\n      />\n      <TouchableOpacity onPress={onPressInputField}>\n        <NatTextInput\n          label={label}\n          placeholder={placeholder}\n          assistiveText={assistiveText}\n          onChangeText={onChangeValues}\n          onFocus={onPressInputField}\n          value={showSelectedOptions()}\n          size={size}\n          type={type}\n          icon={icon}\n        />\n      </TouchableOpacity>\n    </Wrapper>\n  );\n};\n\nNatSelectInput.propTypes = {\n  accessibilityHint: PropTypes.string,\n  accessibilityLabel: PropTypes.string,\n  assistiveText: PropTypes.string,\n  icon: PropTypes.shape({\n    content: PropTypes.any,\n    svg: PropTypes.shape({\n      name: PropTypes.string,\n      size: PropTypes.number,\n    }),\n  }),\n  label: PropTypes.string.isRequired,\n  margin: PropTypes.string,\n  multiSelect: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape(\n    {\n      id: PropTypes.string,\n      title: PropTypes.string,\n    },\n  )),\n  placeholder: PropTypes.string,\n  searchText: PropTypes.string,\n  selectButtonText: PropTypes.string,\n  size: PropTypes.string,\n  theme: PropTypes.shape(),\n  type: PropTypes.string,\n  value: PropTypes.string,\n};\n\nNatSelectInput.defaultProps = {\n  icon: {\n    svg: {\n      name: 'outlined-navigation-arrowbottom',\n      size: 24,\n    },\n  },\n  iconPress: null,\n  multiSelect: false,\n  numberOfLines: 1,\n  options: [],\n  placeholder: '',\n  searchText: 'Search',\n  selectButtonText: 'Select',\n  theme: ThemeNaturaLight,\n  type: 'default',\n  value: '',\n};\n"]}