{"version":3,"sources":["NatButton.styles.js"],"names":["buttonStyles","card","backgroundColor","colors","primary","yellow","color","white","height","width","default","disabled","bw","grayLight","grayDark","link","content","info","newDefault","grayDarker","newShort","outline","borderColor","borderWidth","short","getStylesFrom","styles","type","getButtonStyles","ButtonWrapper","styled","TouchableOpacity","ButtonText","Text","Platform","OS","sanfrancisco","bold","roboto","props","css","ButtonIcon","Image"],"mappings":"wrCAAA;AACA,gD;AACA;AACA,wD;;AAEA,GAAMA,cAAe;AACnBC,KAAM;AACJC,gBAAiBC,eAAOC,OAAP,CAAeC,MAD5B;AAEJC,MAAOH,eAAOC,OAAP,CAAeG,KAFlB;AAGJC,OAAQ,GAHJ;AAIJC,MAAO,GAJH,CADa;;AAOnBC,QAAS;AACPR,gBAAiBC,eAAOC,OAAP,CAAeC,MADzB;AAEPC,MAAOH,eAAOC,OAAP,CAAeG,KAFf;AAGPC,OAAQ,EAHD,CAPU;;AAYnBG,SAAU;AACRT,gBAAiBC,eAAOS,EAAP,CAAUC,SADnB;AAERP,MAAOH,eAAOS,EAAP,CAAUE,QAFT;AAGRN,OAAQ,EAHA,CAZS;;AAiBnBO,KAAM;AACJb,gBAAiB,aADb;AAEJI,MAAOH,eAAOa,OAAP,CAAeC,IAFlB;AAGJT,OAAQ,EAHJ,CAjBa;;AAsBnBU,WAAY;AACVhB,gBAAiBC,eAAOC,OAAP,CAAeC,MADtB;AAEVC,MAAOH,eAAOS,EAAP,CAAUO,UAFP;AAGVX,OAAQ,EAHE,CAtBO;;AA2BnBY,SAAU;AACRlB,gBAAiBC,eAAOC,OAAP,CAAeG,KADxB;AAERD,MAAOH,eAAOS,EAAP,CAAUO,UAFT;AAGRX,OAAQ,EAHA;AAIRC,MAAO,GAJC,CA3BS;;AAiCnBY,QAAS;AACPnB,gBAAiBC,eAAOC,OAAP,CAAeG,KADzB;AAEPe,YAAanB,eAAOC,OAAP,CAAeC,MAFrB;AAGPkB,YAAa,CAHN;AAIPjB,MAAOH,eAAOC,OAAP,CAAeC,MAJf;AAKPG,OAAQ,EALD,CAjCU;;AAwCnBgB,MAAO;AACLtB,gBAAiBC,eAAOC,OAAP,CAAeG,KAD3B;AAELD,MAAOH,eAAOC,OAAP,CAAeC,MAFjB;AAGLG,OAAQ,EAHH;AAILC,MAAO,GAJF,CAxCY,CAArB;;;;AAgDA,GAAMgB,eAAgB,QAAhBA,cAAgB,eAAU,sBAAQC,QAAOC,IAAP,GAAgBD,OAAOhB,OAA/B,EAAV,EAAtB;;AAEA,GAAMkB,iBAAkBH,cAAczB,YAAd,CAAxB;;AAEO,GAAM6B,qCAAgBC,iBAAOC,gBAAvB;AACS,kBAAGJ,KAAH,MAAGA,IAAH,OAAcC,iBAAgBD,IAAhB,EAAsBzB,eAApC,EADT;AAED,mBAAGyB,KAAH,OAAGA,IAAH,OAAcC,iBAAgBD,IAAhB,EAAsBnB,MAApC,EAFC;AAGF,mBAAGmB,KAAH,OAAGA,IAAH,OAAcC,iBAAgBD,IAAhB,EAAsBlB,KAAtB,EAA+B,MAA7C,EAHE;;;;;AAQK,mBAAGkB,KAAH,OAAGA,IAAH,OAAcC,iBAAgBD,IAAhB,EAAsBL,WAAtB,EAAqC,aAAnD,EARL;AASK,mBAAGK,KAAH,OAAGA,IAAH,OAAcC,iBAAgBD,IAAhB,EAAsBJ,WAAtB,EAAqC,CAAnD,EATL,CAAN;;;AAYA,GAAMS,+BAAaF,iBAAOG,IAApB;AACF,mBAAGN,KAAH,OAAGA,IAAH,OAAcC,iBAAgBD,IAAhB,EAAsBrB,KAApC,EADE;;;;;AAMM4B,sBAASC,EAAT,GAAgB,KAAjB,CAA0BC,oBAAaC,IAAvC,CAA8CC,cAAOD,IAN1D;;AAQT,sBAASE,OAAMZ,IAAN,GAAe,MAAf,KAAyBa,WAAzB,mBAAT,EARS,CAAN;;;;;;;AAeA,GAAMC,+BAAaX,iBAAOY,KAApB,kBAAN","file":"NatButton.styles.js","sourcesContent":["import { Platform } from 'react-native';\nimport styled, { css } from 'styled-components/native';\nimport { roboto, sanfrancisco } from '../../assets/theme/fonts/fonts';\nimport { colors } from '../../assets/theme/colors/colors';\n\nconst buttonStyles = {\n  card: {\n    backgroundColor: colors.primary.yellow,\n    color: colors.primary.white,\n    height: 128,\n    width: 128,\n  },\n  default: {\n    backgroundColor: colors.primary.yellow,\n    color: colors.primary.white,\n    height: 48,\n  },\n  disabled: {\n    backgroundColor: colors.bw.grayLight,\n    color: colors.bw.grayDark,\n    height: 48,\n  },\n  link: {\n    backgroundColor: 'transparent',\n    color: colors.content.info,\n    height: 48,\n  },\n  newDefault: {\n    backgroundColor: colors.primary.yellow,\n    color: colors.bw.grayDarker,\n    height: 48,\n  },\n  newShort: {\n    backgroundColor: colors.primary.white,\n    color: colors.bw.grayDarker,\n    height: 40,\n    width: 328,\n  },\n  outline: {\n    backgroundColor: colors.primary.white,\n    borderColor: colors.primary.yellow,\n    borderWidth: 2,\n    color: colors.primary.yellow,\n    height: 48,\n  },\n  short: {\n    backgroundColor: colors.primary.white,\n    color: colors.primary.yellow,\n    height: 40,\n    width: 328,\n  },\n};\n\nconst getStylesFrom = styles => type => styles[type] || styles.default;\n\nconst getButtonStyles = getStylesFrom(buttonStyles);\n\nexport const ButtonWrapper = styled.TouchableOpacity`\n  background-color: ${({ type }) => getButtonStyles(type).backgroundColor};\n  height: ${({ type }) => getButtonStyles(type).height};\n  width: ${({ type }) => getButtonStyles(type).width || '100%'};\n  border-radius: 6;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  border-color: ${({ type }) => getButtonStyles(type).borderColor || 'transparent'};\n  border-width: ${({ type }) => getButtonStyles(type).borderWidth || 0};\n`;\n\nexport const ButtonText = styled.Text`\n  color: ${({ type }) => getButtonStyles(type).color};\n  font-size: 14px;\n  align-self: center;\n  font-weight: bold;\n  letter-spacing: 1;\n  font-family:  ${(Platform.OS === 'ios') ? sanfrancisco.bold : roboto.bold};\n\n  ${props => props.type === 'card' && css`\n    width: 64px;\n    text-align: center;\n    line-height: 21px;\n  `}\n`;\n\nexport const ButtonIcon = styled.Image`\n  height: 30;\n  width: 30;\n`;\n"]}