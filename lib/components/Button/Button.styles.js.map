{"version":3,"sources":["Button.styles.js"],"names":["styleType","type","color","theme","colorsTypes","primary","default","backgroundColor","palette","main","borderColor","contrastText","disabled","grayscale","colorBrdBlack","colorBrdNatGray3","colorBrdNatGray","secondary","colorBrdNatGray2","tertiary","types","borderWidth","height","ButtonWrapper","styled","TouchableOpacity","ButtonText","Text","Platform","OS","sanfrancisco","bold","roboto","props","css","ButtonIcon","Image","IconPress","position"],"mappings":"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","file":"Button.styles.js","sourcesContent":["import { Platform } from 'react-native';\nimport styled, { css } from 'styled-components/native';\nimport { roboto, sanfrancisco } from '../../assets/theme/fonts/fonts';\n\nconst styleType = (type, color, theme) => {\n  const colorsTypes = {\n    primary: {\n      default: {\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n      },\n      disabled: {\n        backgroundColor: `${theme.palette.grayscale.colorBrdBlack}1F`,\n        borderColor: `${theme.palette.grayscale.colorBrdNatGray3}1F`,\n        color: `${theme.palette.grayscale.colorBrdNatGray}40`,\n      },\n      primary: {\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n      },\n      secondary: {\n        backgroundColor: theme.palette.secondary.main,\n        borderColor: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText,\n      },\n    },\n    secondary: {\n      default: {\n        backgroundColor: 'transparent',\n        borderColor: `${theme.palette.grayscale.colorBrdNatGray2}`,\n        color: theme.palette.primary.contrastText,\n      },\n      disabled: {\n        backgroundColor: 'transparent',\n        borderColor: `${theme.palette.grayscale.colorBrdNatGray2}`,\n        color: `${theme.palette.grayscale.colorBrdNatGray}7A`,\n      },\n      primary: {\n        backgroundColor: 'transparent',\n        borderColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n      },\n      secondary: {\n        backgroundColor: 'transparent',\n        borderColor: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText,\n      },\n    },\n    tertiary: {\n      default: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        color: theme.palette.primary.contrastText,\n      },\n      disabled: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        color: `${theme.palette.grayscale.colorBrdNatGray}7A`,\n      },\n      primary: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        color: theme.palette.primary.main,\n      },\n      secondary: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        color: theme.palette.secondary.main,\n      },\n    },\n  };\n  const types = {\n    primary: {\n      backgroundColor: colorsTypes[type][color].backgroundColor,\n      borderColor: colorsTypes[type][color].borderColor,\n      borderWidth: 1,\n      color: colorsTypes[type][color].color,\n      height: 48,\n    },\n    secondary: {\n      backgroundColor: colorsTypes[type][color].backgroundColor,\n      borderColor: colorsTypes[type][color].borderColor,\n      borderWidth: 1,\n      color: colorsTypes[type][color].color,\n      height: 48,\n    },\n    tertiary: {\n      backgroundColor: colorsTypes[type][color].backgroundColor,\n      borderColor: colorsTypes[type][color].borderColor,\n      borderWidth: 1,\n      color: colorsTypes[type][color].color,\n      height: 48,\n    },\n  };\n\n  return types[type];\n};\n\nexport const ButtonWrapper = styled.TouchableOpacity`\n  background-color: ${({ type, color, theme }) => styleType(type, color, theme).backgroundColor};\n  height: 48;\n  border-radius: 4;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  border-color: ${({ type, color, theme }) => styleType(type, color, theme).borderColor};\n  border-width: ${({ type, color, theme }) => styleType(type, color, theme).borderWidth};\n`;\n\nexport const ButtonText = styled.Text`\n  color: ${({ type, color, theme }) => styleType(type, color, theme).color};\n  font-size: 14px;\n  align-self: center;\n  font-weight: bold;\n  letter-spacing: 1;\n  font-family:  ${(Platform.OS === 'ios') ? sanfrancisco.bold : roboto.bold};\n\n  ${props => props.type === 'card' && css`\n    width: 64px;\n    text-align: center;\n    line-height: 21px;\n  `}\n`;\n\nexport const ButtonIcon = styled.Image`\n  height: 30;\n  width: 30;\n`;\n\nexport const IconPress = styled.TouchableOpacity`\n  align-self: center;\n  flex: 1;\n  height: 56;\n  width: 40;\n  align-items: center;\n  justify-content: center;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-right: ${({ position }) => ((position === 'right') ? '16px' : '0px')};\n  padding-left: ${({ position }) => ((position === 'right') ? '0px' : '16px')};\n`;\n"]}