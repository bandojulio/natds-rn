{"version":3,"sources":["NatAppBarSearch.js"],"names":["NatAppBarSearch","title","iconRight","onPressRight","onPressLeft","showIconLeft","onSubmit","submitOnChange","iconLeft","setIconLeft","iconRightLocal","setIconRightLocal","showIconRight","setShowIconRight","inputSearch","setInputSearch","submitCommand","event","nativeEvent","text","clearSearch","changeInputSearch","getInput","length","svg","name","localPressRight","propTypes","PropTypes","shape","node","func","bool","string","defaultProps"],"mappings":"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","file":"NatAppBarSearch.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NatAppBar } from '../NatAppBar';\nimport { NatTextInput } from '../NatTextInput';\n\nimport {\n  HeaderWrapper,\n} from './NatAppBarSearch.styles';\n\nexport const NatAppBarSearch = ({\n  title,\n  iconRight,\n  onPressRight,\n  onPressLeft,\n  showIconLeft,\n  onSubmit,\n  submitOnChange,\n}) => {\n  // eslint-disable-next-line no-unused-vars\n  const [iconLeft, setIconLeft] = useState('outlined-navigation-directionright');\n  const [iconRightLocal, setIconRightLocal] = useState('');\n  const [showIconRight, setShowIconRight] = useState(false);\n  const [inputSearch, setInputSearch] = useState('');\n\n  const submitCommand = (event) => {\n    onSubmit(event.nativeEvent.text);\n  };\n\n  const clearSearch = () => {\n    setInputSearch('');\n    onSubmit('');\n  };\n\n  const changeInputSearch = (text) => {\n    if (submitOnChange) {\n      onSubmit(text);\n    }\n    setInputSearch(text);\n  };\n\n  const getInput = () => (\n    <NatTextInput\n      label=\"\"\n      placeholder={title}\n      onChangeText={changeInputSearch}\n      value={inputSearch}\n      size=\"normal\"\n      type=\"none\"\n      icon={null}\n      onSubmitEditing={submitCommand}\n    />\n  );\n\n  useEffect(() => {\n    if (inputSearch.length > 0) {\n      setShowIconRight(true);\n      setIconRightLocal('outlined-navigation-close');\n    } else if (iconRight && iconRight.svg) {\n      setShowIconRight(true);\n      setIconRightLocal(iconRight.svg.name);\n    } else {\n      setShowIconRight(false);\n    }\n  });\n\n  const localPressRight = () => {\n    if (inputSearch.length === 0) {\n      onPressRight();\n    } else {\n      clearSearch();\n    }\n  };\n\n  return (\n    <HeaderWrapper\n      accessible\n      accessibilityRole=\"header\"\n    >\n      <NatAppBar\n        title={title}\n        showIconRight={showIconRight}\n        showIconLeft={showIconLeft}\n        iconLeft={{ svg: { name: iconLeft } }}\n        iconRight={{ svg: { name: iconRightLocal } }}\n        onPressLeft={() => onPressLeft()}\n        onPressRight={localPressRight}\n        node={getInput()}\n      />\n    </HeaderWrapper>\n  );\n};\n\nNatAppBarSearch.propTypes = {\n  iconLeft: PropTypes.shape(),\n  iconRight: PropTypes.shape(),\n  node: PropTypes.node,\n  onPressLeft: PropTypes.func,\n  onPressRight: PropTypes.func,\n  onSubmit: PropTypes.func,\n  showIconLeft: PropTypes.bool,\n  showIconRight: PropTypes.bool,\n  submitOnChange: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nNatAppBarSearch.defaultProps = {\n  iconLeft: null,\n  iconRight: null,\n  node: null,\n  onPressLeft: () => { },\n  onPressRight: () => { },\n  onSubmit: () => { },\n  showIconLeft: true,\n  showIconRight: true,\n  submitOnChange: false,\n  title: null,\n};\n"]}